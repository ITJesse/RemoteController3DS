{"version":3,"sources":["../src/win.js"],"names":["App","app","Window","window","Win","constructor","win","keypress","init","w","h","resizable","on","quit","key","repeat","handleKeyDown","keyname","handleKeyUp","code","indexOf","push","index","splice","getKeyPress"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,MAAMA,MAAM,kBAAGC,GAAf;AACA,MAAMC,SAAS,kBAAGC,MAAlB;;AAEe,MAAMC,GAAN,CAAU;AACvBC,gBAAc;AACZ,SAAKC,GAAL,GAAW,IAAX;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACD;;AAEDC,SAAO;AACL,SAAKF,GAAL,GAAW,IAAIJ,MAAJ,CAAW;AACpBO,SAAG,GADiB;AAEpBC,SAAG,GAFiB;AAGpBC,iBAAW;AAHS,KAAX,CAAX;AAKA,SAAKL,GAAL,CAASM,EAAT,CAAY,OAAZ,EAAqB,MAAM;AACzBZ,UAAIa,IAAJ;AACD,KAFD;;AAIA,SAAKP,GAAL,CAASM,EAAT,CAAY,SAAZ,EAAwBE,GAAD,IAAS;AAC9B,UAAI,CAACA,IAAIC,MAAT,EAAiB;AACf,aAAKC,aAAL,CAAmBF,IAAIG,OAAvB;AACD;AACF,KAJD;;AAMA,SAAKX,GAAL,CAASM,EAAT,CAAY,OAAZ,EAAsBE,GAAD,IAAS;AAC5B,WAAKI,WAAL,CAAiBJ,IAAIG,OAArB;AACD,KAFD;AAGD;;AAEDD,gBAAcC,OAAd,EAAuB;AACrB,UAAME,OAAO,uBAAQF,OAAR,CAAb;AACA,QAAI,OAAOE,IAAP,KAAgB,QAAhB,IAA4B,KAAKZ,QAAL,CAAca,OAAd,CAAsBD,IAAtB,MAAgC,CAAC,CAAjE,EAAoE;AAClE,WAAKZ,QAAL,CAAcc,IAAd,CAAmBF,IAAnB;AACD;AACF;;AAEDD,cAAYD,OAAZ,EAAqB;AACnB,UAAME,OAAO,uBAAQF,OAAR,CAAb;AACA,QAAI,OAAOE,IAAP,KAAgB,QAApB,EAA8B;AAC5B,YAAMG,QAAQ,KAAKf,QAAL,CAAca,OAAd,CAAsBD,IAAtB,CAAd;AACA,UAAIG,UAAU,CAAC,CAAf,EAAkB;AAChB,aAAKf,QAAL,CAAcgB,MAAd,CAAqBD,KAArB,EAA4B,CAA5B;AACD;AACF;AACF;;AAEDE,gBAAc;AACZ,WAAO,KAAKjB,QAAZ;AACD;AA9CsB;kBAAJH,G","file":"win.js","sourcesContent":["import NS from 'node-sdl2';\nimport keycode from 'keycode';\n\nconst App = NS.app;\nconst Window = NS.window;\n\nexport default class Win {\n  constructor() {\n    this.win = null;\n    this.keypress = [];\n  }\n\n  init() {\n    this.win = new Window({\n      w: 800,\n      h: 600,\n      resizable: false,\n    });\n    this.win.on('close', () => {\n      App.quit();\n    });\n\n    this.win.on('keydown', (key) => {\n      if (!key.repeat) {\n        this.handleKeyDown(key.keyname);\n      }\n    });\n\n    this.win.on('keyup', (key) => {\n      this.handleKeyUp(key.keyname);\n    });\n  }\n\n  handleKeyDown(keyname) {\n    const code = keycode(keyname);\n    if (typeof code === 'number' && this.keypress.indexOf(code) === -1) {\n      this.keypress.push(code);\n    }\n  }\n\n  handleKeyUp(keyname) {\n    const code = keycode(keyname);\n    if (typeof code === 'number') {\n      const index = this.keypress.indexOf(code);\n      if (index !== -1) {\n        this.keypress.splice(index, 1);\n      }\n    }\n  }\n\n  getKeyPress() {\n    return this.keypress;\n  }\n}\n"]}